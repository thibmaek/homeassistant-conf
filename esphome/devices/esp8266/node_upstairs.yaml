substitutions:
  device_name: esp8266-node-upstairs
  friendly_name: "ESP8266 Node Upstairs"
  room: "Upstairs"

packages:
  base_config: !include ../../common/base.yaml
  wifi: !include ../../common/wifi.yaml
  integrated: !include ../../common/integrated.yaml
  i2c: !include ../../common/i2c.yaml

esphome:
  platform: ESP8266
  board: d1_mini
  on_boot:
    then:
      - light.turn_off: rgb_led

api:
  services:
    - service: set_oled_contrast
      variables:
        contrast: float
      then:
        - lambda: |-
            id(oled_display).set_contrast(brightness);
            id(oled_display).fill(COLOR_ON);

time:
  - platform: homeassistant
    id: esptime

switch:
  - platform: template
    name: "${friendly_name} — OLED Display"
    id: oled_display_power
    icon: mdi:monitor
    assumed_state: true
    optimistic: true
    turn_on_action:
      then:
        - lambda: |-
            id(oled_display).turn_on();
    turn_off_action:
      then:
        - lambda: |-
            id(oled_display).turn_off();

font:
  - file: '../../assets/fonts/din_alt.ttf'
    id: din
    size: 26
  - file: '../../assets/fonts/arial.ttf'
    id: arial_sm
    size: 12

display:
  - platform: ssd1306_i2c
    id: oled_display
    model: "SH1106 128x32"
    address: 0x3C
    contrast: 60%
    rotation: 180°
    lambda: |-
      auto time = id(esptime).now();
      if (time.is_valid()) {
        it.strftime(2, 33, id(din), TextAlign::BASELINE_LEFT, "%H:%M", time);
        it.strftime(2, 0, id(arial_sm), TextAlign::TOP_LEFT, "%a %d %b", time);
      } else {
        it.print(2, 32, id(din), TextAlign::BASELINE_LEFT, "...");
      }

      if (id(temperature).has_state()) {
        it.printf(it.get_width() - 2, 0, id(arial_sm), TextAlign::TOP_RIGHT, "%.1f°", id(temperature).state);
      }

      if (id(octoprint_print_progress).has_state()) {
        it.printf(it.get_width() - 2, 20, id(arial_sm), TextAlign::TOP_RIGHT, "%.1f%%", id(octoprint_print_progress).state);
      }

light:
  - platform: rgb
    id: rgb_led
    red: output_red
    green: output_green
    blue: output_blue

output:
  - platform: esp8266_pwm
    id: output_red
    pin: D5
  - platform: esp8266_pwm
    id: output_green
    pin: D6
  - platform: esp8266_pwm
    id: output_blue
    pin: D7

sensor:
  - platform: homeassistant
    id: octoprint_print_progress
    entity_id: sensor.octoprint_print_progress
    internal: true
  - platform: bme280
    address: 0x76
    temperature:
      name: "${room} Temperature"
      id: temperature
      filters:
        - offset: -3.0
      on_value_range:
        - above: 29.0
          then:
            - light.turn_on:
                id: rgb_led
                red: 1.0
                green: 0
                blue: 0
        - below: 28.9
          then:
            - light.turn_off: rgb_led
    pressure:
      name: "${room} Pressure"
    humidity:
      name: "${room} Humidity"
      id: humidity
    update_interval: 60s
