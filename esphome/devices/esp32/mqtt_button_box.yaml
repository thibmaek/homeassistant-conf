substitutions:
  device_name: esp32_mqtt_button_box
  friendly_name: "ESP32 MQTT Button Box"

packages:
  base_config: !include ../../common/base.yaml
  wifi: !include ../../common/wifi.yaml
  mqtt: !include ../../common/mqtt.yaml

esphome:
  platform: ESP32
  board: nodemcu-32s
  on_boot:
    then:
      - sensor.template.publish:
          id: mode
          state: 0
      - light.turn_on:
          id: color_led
          brightness: 0.5
          effect: "Breathe"
          red: 100%
          green: 100%
          blue: 100%
      - light.turn_off:
          id: color_led
      - light.turn_on:
          id: color_led
          brightness: 0.5
          red: 100%
          green: 100%
          blue: 100%

ota:

binary_sensor:
  - platform: gpio
    name: "${friendly_name} — Top Button"
    pin:
      number: GPIO13
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "top"

  - platform: gpio
    name: "${friendly_name} — Button 1"
    pin:
      number: GPIO33
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "1"

  - platform: gpio
    name: "${friendly_name} — Button 2"
    pin:
      number: GPIO32
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "2"

  - platform: gpio
    name: "${friendly_name} — Button 3"
    pin:
      number: GPIO14
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "3"

  - platform: gpio
    name: "${friendly_name} — Button 4"
    pin:
      number: GPIO18
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "4"

  - platform: gpio
    name: "${friendly_name} — Button 5"
    pin:
      number: GPIO26
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "5"

  - platform: gpio
    name: "${friendly_name} — Button 6"
    pin:
      number: GPIO25
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "6"

  - platform: gpio
    name: "${friendly_name} — Button 7"
    pin:
      number: GPIO15
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "7"

  - platform: gpio
    name: "${friendly_name} — Button 8"
    pin:
      number: GPIO5
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "8"

  - platform: gpio
    name: "${friendly_name} — Button 9"
    pin:
      number: GPIO12
      mode: INPUT_PULLUP
      inverted: true
    on_click:
      min_length: 1000ms
      max_length: 2000ms
      then:
        - sensor.template.publish:
            id: mode
            state: !lambda |-
              auto call = id(color_led).turn_on();
              call.set_transition_length(1000);
              call.set_rgb(1.0, 1.0, 1.0);
              call.perform();
              return 0;
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "9"
      - sensor.template.publish:
          id: mode
          state: !lambda |-
            auto call = id(color_led).turn_on();
            call.set_transition_length(1000);
            if (id(mode).state == 0) {
              call.set_rgb(1.0, 1.0, 0.0);
              call.perform();
              return 1;
            }
            if (id(mode).state == 1) {
              call.set_rgb(1.0, 0.0, 1.0);
              call.perform();
              return 2;
            }
            if (id(mode).state == 2) {
              call.set_rgb(0.0, 1.0, 1.0);
              call.perform();
              return 3;
            }
            if (id(mode).state == 3) {
              call.set_rgb(0.5, 1.0, 0.8);
              call.perform();
              return 4;
            }
            if (id(mode).state == 4) {
              call.set_rgb(1.0, 1.0, 1.0);
              call.perform();
              return 0;
            }

  - platform: gpio
    name: "${friendly_name} — Button 10"
    pin:
      number: GPIO27
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "10"

  - platform: gpio
    name: "${friendly_name} — Button 11"
    pin:
      number: GPIO16
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "11"

  - platform: gpio
    name: "${friendly_name} — Button 12"
    pin:
      number: GPIO17
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "12"

  - platform: gpio
    name: "${friendly_name} — Button 13"
    pin:
      number: GPIO4
      mode: INPUT_PULLUP
      inverted: true
    on_press:
      - mqtt.publish:
          topic: "esphome/${device_name}/button"
          payload: "13"

light:
  - platform: fastled_clockless
    id: color_led
    name: "${friendly_name} — Color LED"
    internal: true
    pin: GPIO19
    chipset: WS2811
    num_leds: 1
    rgb_order: GRB
    effects:
      - automation:
          name: "Breathe"
          sequence:
            - delay: 1s
            - light.dim_relative:
                id: color_led
                relative_brightness: 50%
                transition_length: 4s
            - delay: 1s
            - light.dim_relative:
                id: color_led
                relative_brightness: -50%
                transition_length: 4s

sensor:
  - platform: template
    name: "${friendly_name} - Mode"
    id: mode
    icon: mdi:select-all

  - platform: adc
    name: "${friendly_name} - Potentiometer"
    pin: GPIO34
    update_interval: 10s
    attenuation: 11db

  - platform: rotary_encoder
    id: rot_enc
    name: "${friendly_name} — Rotary Encoder"
    pin_a: GPIO23
    pin_b: GPIO22
    pin_reset: GPIO21
    on_clockwise:
      - mqtt.publish:
          topic: "esphome/${device_name}/rotary_encoder/cw"
          payload: !lambda |-
            return to_string(id(rot_enc).state);
    on_anticlockwise:
      - mqtt.publish:
          topic: "esphome/${device_name}/rotary_encoder/ccw"
          payload: !lambda |-
            return to_string(id(rot_enc).state);
